{"trial_id": "16", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "layer_num", "default": null, "conditions": [], "min_value": 64, "max_value": 256, "step": 64, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "lr", "default": 1e-05, "conditions": [], "min_value": 1e-05, "max_value": 0.001, "step": null, "sampling": "log"}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "adadelta"], "ordered": false}}, {"class_name": "Float", "config": {"name": "l2_reg", "default": 1e-06, "conditions": [], "min_value": 1e-06, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "beta_1", "default": 0.85, "conditions": [], "min_value": 0.85, "max_value": 0.95, "step": 0.02, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "beta_2", "default": 0.98, "conditions": [], "min_value": 0.98, "max_value": 0.999, "step": 0.005, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "epsilon", "default": 1e-08, "conditions": [], "min_value": 1e-08, "max_value": 1e-06, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "gamma", "default": 1.0, "conditions": [], "min_value": 1.0, "max_value": 4.0, "step": 0.5, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "alpha", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.5, "step": 0.05, "sampling": "linear"}}], "values": {"layer_num": 64, "dropout": 0.1, "lr": 5.2626850635223454e-05, "optimizer": "adam", "l2_reg": 0.00018263451868049803, "beta_1": 0.9099999999999999, "beta_2": 0.985, "epsilon": 4.1505824284146983e-07, "gamma": 3.0, "alpha": 0.1}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras_tuner/engine/base_tuner.py\", line 270, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras_tuner/engine/base_tuner.py\", line 235, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras_tuner/engine/tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras_tuner/engine/tuner.py\", line 214, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras_tuner/engine/hypermodel.py\", line 144, in fit\n    return model.fit(*args, **kwargs)\n  File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/utils/traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/tmp/__autograph_generated_filewjiitf3j.py\", line 15, in tf__train_function\n    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)\nValueError: in user code:\n\n    File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/engine/training.py\", line 1338, in train_function  *\n        return step_function(self, iterator)\n    File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/engine/training.py\", line 1322, in step_function  **\n        outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/engine/training.py\", line 1303, in run_step  **\n        outputs = model.train_step(data)\n    File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/engine/training.py\", line 1081, in train_step\n        loss = self.compute_loss(x, y, y_pred, sample_weight)\n    File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/engine/training.py\", line 1139, in compute_loss\n        return self.compiled_loss(\n    File \"/home/mpatel38/miniconda3/envs/deepAptamerClean/lib/python3.8/site-packages/keras/src/engine/compile_utils.py\", line 316, in __call__\n        total_total_loss_mean_value = tf.add_n(total_loss_mean_values)\n\n    ValueError: Shapes must be equal rank, but are 1 and 0\n    \tFrom merging shape 0 with other shapes. for '{{node AddN_1}} = AddN[N=2, T=DT_FLOAT](sigmoid_focal_crossentropy/weighted_loss/Mul, AddN)' with input shapes: [?], [].\n\n"}